[{"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/index.js":"1","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/App.js":"2","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/tile.jsx":"3","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Tile.jsx":"4","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Controls.jsx":"5"},{"size":219,"mtime":1611360980871,"results":"6","hashOfConfig":"7"},{"size":2187,"mtime":1611369908145,"results":"8","hashOfConfig":"7"},{"size":311,"mtime":1611363450884,"results":"9","hashOfConfig":"7"},{"size":320,"mtime":1611363786324,"results":"10","hashOfConfig":"7"},{"size":1598,"mtime":1611376017827,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"avswwr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/index.js",[],["26","27"],"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/App.js",["28","29"],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Tile } from \"./components/Tile\";\nimport { Controls } from \"./components/Controls\";\nimport { css } from \"@emotion/css\";\n\nconst getImages = async () => {\n    const images = await fetch(\"/files\");\n    return images.json();\n};\n\nconst appStyle = css`\n    background-color: black;\n    color: white;\n    display: flex;\n    height: 100vh;\n    flex-direction: column;\n`;\n\nconst headerStyle = css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1rem;\n    font-family: \"Cormorant Garamond\", serif;\n`;\n\nconst listStyle = css`\n    overflow-y: scroll;\n`;\n\nconst galleryStyle = css`\n    position: relative;\n    max-height: 100%;\n    max-width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1 1 auto;\n    margin: 1rem;\n    min-height: 0;\n`;\n\nconst imageStyle = css`\n    max-height: 100%;\n    max-width: 100%;\n`;\n\nfunction App() {\n    const [images, setImages] = useState([]);\n    const [image, setImage] = useState(null);\n    const [index, setIndex] = useState(0); //Make sticky?\n\n    useEffect(() => {\n        getImages().then((images) => {\n            setImages(images);\n        });\n    }, []);\n\n    useEffect(() => {\n        console.log(images, index);\n        if (images) setImage(images[index]);\n    }, [images, index]);\n\n    return (\n        <div className={appStyle}>\n            <header className={headerStyle}>\n                <h1>by Craig Schoppe</h1>\n                <Controls array={images} index={index} setIndex={setIndex} />\n            </header>\n            {/* <div className={listStyle}>\n                {images.map((image, i) => (\n                    <Tile image={image} key={`image-${i}`} />\n                ))}\n            </div> */}\n            <div className={galleryStyle}>\n                {image ? (\n                    <img\n                        className={imageStyle}\n                        src={`https://storage.googleapis.com/craigschoppe-images/${image}`}\n                        alt={image}\n                    />\n                ) : null}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/tile.jsx",["30"],"const Tile = (props) => {\n    const { image } = props;\n    return (\n        <a className=\"tile\">\n            <img\n                src={`https://storage.googleapis.com/craigschoppe-images/${image}`}\n                alt={image}\n                height=\"350\"\n            />\n        </a>\n    );\n};\n\nexport { Tile };\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Tile.jsx",["31"],"const Tile = (props) => {\n    const { image } = props;\n    return (\n        <a className=\"tile\" href=\"#\">\n            <img\n                src={`https://storage.googleapis.com/craigschoppe-images/${image}`}\n                alt={image}\n                height=\"350\"\n            />\n        </a>\n    );\n};\n\nexport { Tile };\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Controls.jsx",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":14},{"ruleId":"38","severity":1,"message":"42","line":28,"column":7,"nodeType":"40","messageId":"41","endLine":28,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":4,"column":9,"nodeType":"45","endLine":4,"endColumn":29},{"ruleId":"43","severity":1,"message":"46","line":4,"column":9,"nodeType":"45","endLine":4,"endColumn":38},{"ruleId":"38","severity":1,"message":"47","line":1,"column":21,"nodeType":"40","messageId":"41","endLine":1,"endColumn":29},{"ruleId":"48","severity":1,"message":"49","line":30,"column":11,"nodeType":"50","endLine":38,"endColumn":6},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Tile' is defined but never used.","Identifier","unusedVar","'listStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","react-hooks/exhaustive-deps","The 'handleKeyboard' function makes the dependencies of useEffect Hook (at line 53) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleKeyboard' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]