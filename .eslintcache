[{"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/index.js":"1","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/App.js":"2","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/tile.jsx":"3","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Tile.jsx":"4","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Controls.jsx":"5","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/FolderSelector.jsx":"6","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/TitleBlock.jsx":"7"},{"size":219,"mtime":1611360980871,"results":"8","hashOfConfig":"9"},{"size":6767,"mtime":1611521228855,"results":"10","hashOfConfig":"9"},{"size":311,"mtime":1611363450884,"results":"11","hashOfConfig":"9"},{"size":320,"mtime":1611363786324,"results":"12","hashOfConfig":"9"},{"size":1725,"mtime":1611460710442,"results":"13","hashOfConfig":"9"},{"size":1063,"mtime":1611517923896,"results":"14","hashOfConfig":"9"},{"size":537,"mtime":1611460729389,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"avswwr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/index.js",[],["37","38"],"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/App.js",["39","40"],"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/tile.jsx",["41"],"const Tile = (props) => {\n    const { image } = props;\n    return (\n        <a className=\"tile\">\n            <img\n                src={`https://storage.googleapis.com/craigschoppe-images/${image}`}\n                alt={image}\n                height=\"350\"\n            />\n        </a>\n    );\n};\n\nexport { Tile };\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Tile.jsx",["42"],"const Tile = (props) => {\n    const { image } = props;\n    return (\n        <a className=\"tile\" href=\"#\">\n            <img\n                src={`https://storage.googleapis.com/craigschoppe-images/${image}`}\n                alt={image}\n                height=\"350\"\n            />\n        </a>\n    );\n};\n\nexport { Tile };\n",["43","44"],"/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/Controls.jsx",["45","46"],"import { useEffect, useCallback } from \"react\";\nimport { css, cx } from \"@emotion/css\";\n\nconst controlsStyle = css`\n    font-family: \"Poppins\", sans-serif;\n    display: flex;\n    flex: 1 1 auto;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst button = css`\n    width: 60px;\n    height: 60px;\n    color: white;\n    background: none;\n    border: none;\n    &:hover {\n        outline: none;\n        border: 1px solid #ccc;\n    }\n    &:focus {\n        outline: none;\n        border: 1px solid white;\n    }\n`;\n\nconst prev = css``;\nconst next = css``;\n\nconst Controls = (props) => {\n    const { image, handleNext, handlePrev } = props;\n\n    const handleKeyboard = (e) => {\n        if (e.key === \"ArrowLeft\") {\n            // left arrow\n            handlePrev();\n        } else if (e.key === \"ArrowRight\") {\n            // right arrow\n            handleNext();\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyboard);\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyboard);\n        };\n    }, [image]);\n\n    return (\n        <div className={controlsStyle}>\n            <button\n                className={cx(button, prev)}\n                onClick={handlePrev}\n                title=\"Click to Go Back\"\n            >\n                ← <span className=\"assistiveText\">Previous Photo</span>\n            </button>\n            {props.children}\n            <button\n                className={cx(button, next)}\n                onClick={handleNext}\n                title=\"Click to Advance\"\n            >\n                → <span className=\"assistiveText\">Next Photo</span>\n            </button>\n        </div>\n    );\n};\nexport { Controls };\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/FolderSelector.jsx",["47"],"import { useEffect } from \"react\";\nimport { css } from \"@emotion/css\";\n\nconst h1 = css`\n    margin: 1rem 0;\n    font-size: 1.5rem;\n    @media (min-width: 420px) {\n        font-size: 2rem;\n    }\n`;\n\nconst buttonStyle = css`\n    color: white;\n    font-family: \"Cormorant Garamond\", serif;\n    font-size: 16px;\n    outline: none;\n    background: none;\n    border: none;\n    border-bottom: 1px solid white;\n    &:hover {\n        outline: none;\n        box-shadow: 0 1px 0 0 white;\n    }\n    &:focus {\n        outline: none;\n        box-shadow: 0 1px 0 0 white;\n    }\n`;\n\nconst FolderSelector = (props) => {\n    const { folder, folders, nextFolder } = props;\n\n    const getButton = () => {\n        return (\n            <button\n                className={buttonStyle}\n                onClick={nextFolder}\n                title=\"Click to Change\"\n            >\n                <h1 className={h1}>{folders[folder].name.slice(0, -1)}</h1>\n            </button>\n        );\n    };\n\n    return <div>{folder !== null ? getButton() : null}</div>;\n};\n\nexport { FolderSelector };\n","/Users/owenschoppe/Documents/GitHub/craigschoppe/src/components/TitleBlock.jsx",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":74,"column":7,"nodeType":"56","messageId":"57","endLine":74,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":128,"column":8,"nodeType":"60","endLine":128,"endColumn":27,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":9,"nodeType":"64","endLine":4,"endColumn":29},{"ruleId":"62","severity":1,"message":"65","line":4,"column":9,"nodeType":"64","endLine":4,"endColumn":38},{"ruleId":"50","replacedBy":"66"},{"ruleId":"52","replacedBy":"67"},{"ruleId":"54","severity":1,"message":"68","line":1,"column":21,"nodeType":"56","messageId":"57","endLine":1,"endColumn":32},{"ruleId":"58","severity":1,"message":"69","line":49,"column":8,"nodeType":"60","endLine":49,"endColumn":15,"suggestions":"70"},{"ruleId":"54","severity":1,"message":"71","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":19},{"ruleId":"50","replacedBy":"72"},{"ruleId":"52","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'instagramStyle' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'folders' and 'images'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setImages' needs the current value of 'folders'.","ArrayExpression",["76"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["74"],["75"],"'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'handleKeyboard'. Either include it or remove the dependency array.",["77"],"'useEffect' is defined but never used.",["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [allImages, folder, folders, images]",{"range":"82","text":"83"},"Update the dependencies array to be: [handleKeyboard, image]",{"range":"84","text":"85"},[3141,3160],"[allImages, folder, folders, images]",[1084,1091],"[handleKeyboard, image]"]